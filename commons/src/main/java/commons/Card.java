package commons;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import java.util.Objects;

@Entity
public class Card {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private long id;
    private long listId;
    private long boardId;
    private String title;
    private long idx;

    /**
     * Empty constructor
     */
    public Card() {
    }

    /**
     * Constructor (with id parameter)
     *
     * @param id the Card ID
     * @param listId this Card's List ID
     * @param boardId the Card's Board ID
     * @param title the Card's title
     * @param idx the position index of card in list
     */
    public Card(long id, long listId, long boardId, String title, long idx) {
        this.id = id;
        this.listId = listId;
        this.title = title;
        this.idx = idx;
        this.boardId = boardId;
    }

    /**
     * Constructor (without id parameter)
     * - ID will be automatically generated by database
     *
     * @param listId  the Card's list's id
     *
     * @param boardId the Card's board's id
     * @param title   the Card's title
     * @param idx     the Card's position index in its list
     */
    public Card(long listId, long boardId, String title, long idx) {
        this.id = -1;
        this.listId = listId;
        this.boardId = boardId;
        this.title = title;
        this.idx = idx;
    }

    /**
     * Getter for Card ID
     *
     * @return the Card ID
     */
    public long getId() {
        return id;
    }

    /**
     * Setter for ID
     *
     * @param cardId the new id
     */
    public void setId(long cardId) {
        this.id = cardId;
    }

    /**
     * Getter for CardList id
     *
     * @return this Card's CardList ID
     */
    public long getListId() {
        return listId;
    }

    /**
     * Setter for CardList id
     *
     * @param cardListId new CardList ID
     */
    public void setListId(long cardListId) {
        this.listId = cardListId;
    }

    /**
     * Getter for Board ID
     *
     * @return the Card's Board ID
     */
    public long getBoardId() {
        return boardId;
    }

    /**
     * Setter for Board ID
     *
     * @param boardId the new board ID
     */
    public void setBoardId(long boardId) {
        this.boardId = boardId;
    }

    /**
     * Getter for title
     *
     * @return the title of this Card
     */
    public String getTitle() {
        return title;
    }

    /**
     * Setter for title
     *
     * @param cardTitle the new title of this Card
     */
    public void setTitle(String cardTitle) {
        this.title = cardTitle;
    }

    /**
     * Getter for position index
     *
     * @return the position index of this Card in the CardList
     */
    public long getIdx() {
        return idx;
    }

    /**
     * Setter for position index
     *
     * @param nextCardId the new position index of the Card in the CardList
     */
    public void setIdx(long nextCardId) {
        this.idx = nextCardId;
    }

    /**
     * Checks if the IDs of the cards match
     *
     * @param o the Object to compare to
     */
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Card card = (Card) o;
        return id == card.id;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String toString() {
        return "Card{" +
            "id=" + id +
            ", listId=" + listId +
            ", title='" + title + '\'' +
            ", idx=" + idx +
            ", boardId=" + boardId +
            '}';
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public int hashCode() {
        return Objects.hash(id, listId, boardId, title, idx);
    }
}
